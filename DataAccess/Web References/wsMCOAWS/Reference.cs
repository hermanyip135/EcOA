//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34209 版自动生成。
// 
#pragma warning disable 1591

namespace DataAccess.wsMCOAWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="McoaWSSoap", Namespace="http://tempuri.org/")]
    public partial class McoaWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginByPushOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginRegisterAgainOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartApp2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDirecePushMessageByEmpCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDirecePushMessageByLoginIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDirectPushMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPushMessageInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPushMessageByRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearMessageByRegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppInstructionsByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppVersionInstructionsListOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public McoaWS() {
            this.Url = global::DataAccess.Properties.Settings.Default.DataAccess_wsMCOAWS_McoaWS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCheckCompletedEventHandler LoginCheckCompleted;
        
        /// <remarks/>
        public event LoginByPushCompletedEventHandler LoginByPushCompleted;
        
        /// <remarks/>
        public event LoginRegisterCompletedEventHandler LoginRegisterCompleted;
        
        /// <remarks/>
        public event LoginRegisterAgainCompletedEventHandler LoginRegisterAgainCompleted;
        
        /// <remarks/>
        public event StartAppCompletedEventHandler StartAppCompleted;
        
        /// <remarks/>
        public event StartApp2CompletedEventHandler StartApp2Completed;
        
        /// <remarks/>
        public event SendDirecePushMessageByEmpCodeCompletedEventHandler SendDirecePushMessageByEmpCodeCompleted;
        
        /// <remarks/>
        public event SendDirecePushMessageByLoginIDCompletedEventHandler SendDirecePushMessageByLoginIDCompleted;
        
        /// <remarks/>
        public event SendDirectPushMessageCompletedEventHandler SendDirectPushMessageCompleted;
        
        /// <remarks/>
        public event GetPushMessageInfoCompletedEventHandler GetPushMessageInfoCompleted;
        
        /// <remarks/>
        public event GetPushMessageByRegisterCompletedEventHandler GetPushMessageByRegisterCompleted;
        
        /// <remarks/>
        public event ClearMessageByRegisterCompletedEventHandler ClearMessageByRegisterCompleted;
        
        /// <remarks/>
        public event GetAppInstructionsByIDCompletedEventHandler GetAppInstructionsByIDCompleted;
        
        /// <remarks/>
        public event GetAppVersionInstructionsListCompletedEventHandler GetAppVersionInstructionsListCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginCheck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginCheck(string empcode, string password, string esn, string accesskey) {
            object[] results = this.Invoke("LoginCheck", new object[] {
                        empcode,
                        password,
                        esn,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginCheckAsync(string empcode, string password, string esn, string accesskey) {
            this.LoginCheckAsync(empcode, password, esn, accesskey, null);
        }
        
        /// <remarks/>
        public void LoginCheckAsync(string empcode, string password, string esn, string accesskey, object userState) {
            if ((this.LoginCheckOperationCompleted == null)) {
                this.LoginCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginCheckOperationCompleted);
            }
            this.InvokeAsync("LoginCheck", new object[] {
                        empcode,
                        password,
                        esn,
                        accesskey}, this.LoginCheckOperationCompleted, userState);
        }
        
        private void OnLoginCheckOperationCompleted(object arg) {
            if ((this.LoginCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCheckCompleted(this, new LoginCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginByPush", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginByPush(string empcode, string esn, string accesskey) {
            object[] results = this.Invoke("LoginByPush", new object[] {
                        empcode,
                        esn,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginByPushAsync(string empcode, string esn, string accesskey) {
            this.LoginByPushAsync(empcode, esn, accesskey, null);
        }
        
        /// <remarks/>
        public void LoginByPushAsync(string empcode, string esn, string accesskey, object userState) {
            if ((this.LoginByPushOperationCompleted == null)) {
                this.LoginByPushOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginByPushOperationCompleted);
            }
            this.InvokeAsync("LoginByPush", new object[] {
                        empcode,
                        esn,
                        accesskey}, this.LoginByPushOperationCompleted, userState);
        }
        
        private void OnLoginByPushOperationCompleted(object arg) {
            if ((this.LoginByPushCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginByPushCompleted(this, new LoginByPushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginRegister(string empcode, string empname, string esn, string imsi, string os, string phonemodel, string accesskey) {
            object[] results = this.Invoke("LoginRegister", new object[] {
                        empcode,
                        empname,
                        esn,
                        imsi,
                        os,
                        phonemodel,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginRegisterAsync(string empcode, string empname, string esn, string imsi, string os, string phonemodel, string accesskey) {
            this.LoginRegisterAsync(empcode, empname, esn, imsi, os, phonemodel, accesskey, null);
        }
        
        /// <remarks/>
        public void LoginRegisterAsync(string empcode, string empname, string esn, string imsi, string os, string phonemodel, string accesskey, object userState) {
            if ((this.LoginRegisterOperationCompleted == null)) {
                this.LoginRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginRegisterOperationCompleted);
            }
            this.InvokeAsync("LoginRegister", new object[] {
                        empcode,
                        empname,
                        esn,
                        imsi,
                        os,
                        phonemodel,
                        accesskey}, this.LoginRegisterOperationCompleted, userState);
        }
        
        private void OnLoginRegisterOperationCompleted(object arg) {
            if ((this.LoginRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginRegisterCompleted(this, new LoginRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginRegisterAgain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LoginRegisterAgain(string empcode, string empname, string esn, string imsi, string os, string phonemodel, string memo, string accesskey) {
            object[] results = this.Invoke("LoginRegisterAgain", new object[] {
                        empcode,
                        empname,
                        esn,
                        imsi,
                        os,
                        phonemodel,
                        memo,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoginRegisterAgainAsync(string empcode, string empname, string esn, string imsi, string os, string phonemodel, string memo, string accesskey) {
            this.LoginRegisterAgainAsync(empcode, empname, esn, imsi, os, phonemodel, memo, accesskey, null);
        }
        
        /// <remarks/>
        public void LoginRegisterAgainAsync(string empcode, string empname, string esn, string imsi, string os, string phonemodel, string memo, string accesskey, object userState) {
            if ((this.LoginRegisterAgainOperationCompleted == null)) {
                this.LoginRegisterAgainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginRegisterAgainOperationCompleted);
            }
            this.InvokeAsync("LoginRegisterAgain", new object[] {
                        empcode,
                        empname,
                        esn,
                        imsi,
                        os,
                        phonemodel,
                        memo,
                        accesskey}, this.LoginRegisterAgainOperationCompleted, userState);
        }
        
        private void OnLoginRegisterAgainOperationCompleted(object arg) {
            if ((this.LoginRegisterAgainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginRegisterAgainCompleted(this, new LoginRegisterAgainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StartApp(string appid, string clientid, string registerid, string accesskey) {
            object[] results = this.Invoke("StartApp", new object[] {
                        appid,
                        clientid,
                        registerid,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StartAppAsync(string appid, string clientid, string registerid, string accesskey) {
            this.StartAppAsync(appid, clientid, registerid, accesskey, null);
        }
        
        /// <remarks/>
        public void StartAppAsync(string appid, string clientid, string registerid, string accesskey, object userState) {
            if ((this.StartAppOperationCompleted == null)) {
                this.StartAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartAppOperationCompleted);
            }
            this.InvokeAsync("StartApp", new object[] {
                        appid,
                        clientid,
                        registerid,
                        accesskey}, this.StartAppOperationCompleted, userState);
        }
        
        private void OnStartAppOperationCompleted(object arg) {
            if ((this.StartAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartAppCompleted(this, new StartAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartApp2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StartApp2(string appid, string clientid, string registerid, string localVersion, string deviceType, string accesskey) {
            object[] results = this.Invoke("StartApp2", new object[] {
                        appid,
                        clientid,
                        registerid,
                        localVersion,
                        deviceType,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StartApp2Async(string appid, string clientid, string registerid, string localVersion, string deviceType, string accesskey) {
            this.StartApp2Async(appid, clientid, registerid, localVersion, deviceType, accesskey, null);
        }
        
        /// <remarks/>
        public void StartApp2Async(string appid, string clientid, string registerid, string localVersion, string deviceType, string accesskey, object userState) {
            if ((this.StartApp2OperationCompleted == null)) {
                this.StartApp2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartApp2OperationCompleted);
            }
            this.InvokeAsync("StartApp2", new object[] {
                        appid,
                        clientid,
                        registerid,
                        localVersion,
                        deviceType,
                        accesskey}, this.StartApp2OperationCompleted, userState);
        }
        
        private void OnStartApp2OperationCompleted(object arg) {
            if ((this.StartApp2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartApp2Completed(this, new StartApp2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDirecePushMessageByEmpCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendDirecePushMessageByEmpCode(string pushId, string jsonData, string empCode) {
            object[] results = this.Invoke("SendDirecePushMessageByEmpCode", new object[] {
                        pushId,
                        jsonData,
                        empCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDirecePushMessageByEmpCodeAsync(string pushId, string jsonData, string empCode) {
            this.SendDirecePushMessageByEmpCodeAsync(pushId, jsonData, empCode, null);
        }
        
        /// <remarks/>
        public void SendDirecePushMessageByEmpCodeAsync(string pushId, string jsonData, string empCode, object userState) {
            if ((this.SendDirecePushMessageByEmpCodeOperationCompleted == null)) {
                this.SendDirecePushMessageByEmpCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDirecePushMessageByEmpCodeOperationCompleted);
            }
            this.InvokeAsync("SendDirecePushMessageByEmpCode", new object[] {
                        pushId,
                        jsonData,
                        empCode}, this.SendDirecePushMessageByEmpCodeOperationCompleted, userState);
        }
        
        private void OnSendDirecePushMessageByEmpCodeOperationCompleted(object arg) {
            if ((this.SendDirecePushMessageByEmpCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDirecePushMessageByEmpCodeCompleted(this, new SendDirecePushMessageByEmpCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDirecePushMessageByLoginID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendDirecePushMessageByLoginID(string pushId, string jsonData, string loginId) {
            object[] results = this.Invoke("SendDirecePushMessageByLoginID", new object[] {
                        pushId,
                        jsonData,
                        loginId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDirecePushMessageByLoginIDAsync(string pushId, string jsonData, string loginId) {
            this.SendDirecePushMessageByLoginIDAsync(pushId, jsonData, loginId, null);
        }
        
        /// <remarks/>
        public void SendDirecePushMessageByLoginIDAsync(string pushId, string jsonData, string loginId, object userState) {
            if ((this.SendDirecePushMessageByLoginIDOperationCompleted == null)) {
                this.SendDirecePushMessageByLoginIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDirecePushMessageByLoginIDOperationCompleted);
            }
            this.InvokeAsync("SendDirecePushMessageByLoginID", new object[] {
                        pushId,
                        jsonData,
                        loginId}, this.SendDirecePushMessageByLoginIDOperationCompleted, userState);
        }
        
        private void OnSendDirecePushMessageByLoginIDOperationCompleted(object arg) {
            if ((this.SendDirecePushMessageByLoginIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDirecePushMessageByLoginIDCompleted(this, new SendDirecePushMessageByLoginIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDirectPushMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendDirectPushMessage(string pushId, string jsonData, string registerId) {
            object[] results = this.Invoke("SendDirectPushMessage", new object[] {
                        pushId,
                        jsonData,
                        registerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDirectPushMessageAsync(string pushId, string jsonData, string registerId) {
            this.SendDirectPushMessageAsync(pushId, jsonData, registerId, null);
        }
        
        /// <remarks/>
        public void SendDirectPushMessageAsync(string pushId, string jsonData, string registerId, object userState) {
            if ((this.SendDirectPushMessageOperationCompleted == null)) {
                this.SendDirectPushMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDirectPushMessageOperationCompleted);
            }
            this.InvokeAsync("SendDirectPushMessage", new object[] {
                        pushId,
                        jsonData,
                        registerId}, this.SendDirectPushMessageOperationCompleted, userState);
        }
        
        private void OnSendDirectPushMessageOperationCompleted(object arg) {
            if ((this.SendDirectPushMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDirectPushMessageCompleted(this, new SendDirectPushMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPushMessageInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPushMessageInfo(string pmid, string accesskey) {
            object[] results = this.Invoke("GetPushMessageInfo", new object[] {
                        pmid,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPushMessageInfoAsync(string pmid, string accesskey) {
            this.GetPushMessageInfoAsync(pmid, accesskey, null);
        }
        
        /// <remarks/>
        public void GetPushMessageInfoAsync(string pmid, string accesskey, object userState) {
            if ((this.GetPushMessageInfoOperationCompleted == null)) {
                this.GetPushMessageInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPushMessageInfoOperationCompleted);
            }
            this.InvokeAsync("GetPushMessageInfo", new object[] {
                        pmid,
                        accesskey}, this.GetPushMessageInfoOperationCompleted, userState);
        }
        
        private void OnGetPushMessageInfoOperationCompleted(object arg) {
            if ((this.GetPushMessageInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPushMessageInfoCompleted(this, new GetPushMessageInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPushMessageByRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPushMessageByRegister(int registerId, int iPage, int iPageSize, string accesskey) {
            object[] results = this.Invoke("GetPushMessageByRegister", new object[] {
                        registerId,
                        iPage,
                        iPageSize,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPushMessageByRegisterAsync(int registerId, int iPage, int iPageSize, string accesskey) {
            this.GetPushMessageByRegisterAsync(registerId, iPage, iPageSize, accesskey, null);
        }
        
        /// <remarks/>
        public void GetPushMessageByRegisterAsync(int registerId, int iPage, int iPageSize, string accesskey, object userState) {
            if ((this.GetPushMessageByRegisterOperationCompleted == null)) {
                this.GetPushMessageByRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPushMessageByRegisterOperationCompleted);
            }
            this.InvokeAsync("GetPushMessageByRegister", new object[] {
                        registerId,
                        iPage,
                        iPageSize,
                        accesskey}, this.GetPushMessageByRegisterOperationCompleted, userState);
        }
        
        private void OnGetPushMessageByRegisterOperationCompleted(object arg) {
            if ((this.GetPushMessageByRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPushMessageByRegisterCompleted(this, new GetPushMessageByRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClearMessageByRegister", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ClearMessageByRegister(int registerId, string accesskey) {
            object[] results = this.Invoke("ClearMessageByRegister", new object[] {
                        registerId,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ClearMessageByRegisterAsync(int registerId, string accesskey) {
            this.ClearMessageByRegisterAsync(registerId, accesskey, null);
        }
        
        /// <remarks/>
        public void ClearMessageByRegisterAsync(int registerId, string accesskey, object userState) {
            if ((this.ClearMessageByRegisterOperationCompleted == null)) {
                this.ClearMessageByRegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearMessageByRegisterOperationCompleted);
            }
            this.InvokeAsync("ClearMessageByRegister", new object[] {
                        registerId,
                        accesskey}, this.ClearMessageByRegisterOperationCompleted, userState);
        }
        
        private void OnClearMessageByRegisterOperationCompleted(object arg) {
            if ((this.ClearMessageByRegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearMessageByRegisterCompleted(this, new ClearMessageByRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppInstructionsByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppInstructionsByID(string versionid, string accesskey) {
            object[] results = this.Invoke("GetAppInstructionsByID", new object[] {
                        versionid,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppInstructionsByIDAsync(string versionid, string accesskey) {
            this.GetAppInstructionsByIDAsync(versionid, accesskey, null);
        }
        
        /// <remarks/>
        public void GetAppInstructionsByIDAsync(string versionid, string accesskey, object userState) {
            if ((this.GetAppInstructionsByIDOperationCompleted == null)) {
                this.GetAppInstructionsByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppInstructionsByIDOperationCompleted);
            }
            this.InvokeAsync("GetAppInstructionsByID", new object[] {
                        versionid,
                        accesskey}, this.GetAppInstructionsByIDOperationCompleted, userState);
        }
        
        private void OnGetAppInstructionsByIDOperationCompleted(object arg) {
            if ((this.GetAppInstructionsByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppInstructionsByIDCompleted(this, new GetAppInstructionsByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppVersionInstructionsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAppVersionInstructionsList(string appid, string devicetype, int iPage, int iPageSize, string accesskey) {
            object[] results = this.Invoke("GetAppVersionInstructionsList", new object[] {
                        appid,
                        devicetype,
                        iPage,
                        iPageSize,
                        accesskey});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppVersionInstructionsListAsync(string appid, string devicetype, int iPage, int iPageSize, string accesskey) {
            this.GetAppVersionInstructionsListAsync(appid, devicetype, iPage, iPageSize, accesskey, null);
        }
        
        /// <remarks/>
        public void GetAppVersionInstructionsListAsync(string appid, string devicetype, int iPage, int iPageSize, string accesskey, object userState) {
            if ((this.GetAppVersionInstructionsListOperationCompleted == null)) {
                this.GetAppVersionInstructionsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppVersionInstructionsListOperationCompleted);
            }
            this.InvokeAsync("GetAppVersionInstructionsList", new object[] {
                        appid,
                        devicetype,
                        iPage,
                        iPageSize,
                        accesskey}, this.GetAppVersionInstructionsListOperationCompleted, userState);
        }
        
        private void OnGetAppVersionInstructionsListOperationCompleted(object arg) {
            if ((this.GetAppVersionInstructionsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppVersionInstructionsListCompleted(this, new GetAppVersionInstructionsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LoginCheckCompletedEventHandler(object sender, LoginCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LoginByPushCompletedEventHandler(object sender, LoginByPushCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginByPushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginByPushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LoginRegisterCompletedEventHandler(object sender, LoginRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void LoginRegisterAgainCompletedEventHandler(object sender, LoginRegisterAgainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginRegisterAgainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginRegisterAgainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void StartAppCompletedEventHandler(object sender, StartAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void StartApp2CompletedEventHandler(object sender, StartApp2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartApp2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartApp2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendDirecePushMessageByEmpCodeCompletedEventHandler(object sender, SendDirecePushMessageByEmpCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDirecePushMessageByEmpCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDirecePushMessageByEmpCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendDirecePushMessageByLoginIDCompletedEventHandler(object sender, SendDirecePushMessageByLoginIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDirecePushMessageByLoginIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDirecePushMessageByLoginIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SendDirectPushMessageCompletedEventHandler(object sender, SendDirectPushMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDirectPushMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDirectPushMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPushMessageInfoCompletedEventHandler(object sender, GetPushMessageInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPushMessageInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPushMessageInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPushMessageByRegisterCompletedEventHandler(object sender, GetPushMessageByRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPushMessageByRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPushMessageByRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ClearMessageByRegisterCompletedEventHandler(object sender, ClearMessageByRegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearMessageByRegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearMessageByRegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAppInstructionsByIDCompletedEventHandler(object sender, GetAppInstructionsByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppInstructionsByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppInstructionsByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAppVersionInstructionsListCompletedEventHandler(object sender, GetAppVersionInstructionsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppVersionInstructionsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppVersionInstructionsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591